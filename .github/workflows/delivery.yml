name: Delivery Microservice CI/CD

on:
  push:
    branches: [ delivery ]
  pull_request:
    branches: [ dev, main ]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "pnpm"
          cache-dependency-path: services/delivery/pnpm-lock.yaml
      - name: Install dependencies
        run: |
          cd ./services/delivery
          pnpm install --frozen-lockfile
      - name: Build
        run: |
          cd ./services/delivery
          pnpm build

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
      - uses: pnpm/action-setup@v2
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "pnpm"
          cache-dependency-path: services/delivery/pnpm-lock.yaml
      - name: Install dependencies
        run: |
          cd ./services/delivery
          pnpm install --frozen-lockfile
      - name: Execute tests
        run: |
          cd ./services/delivery
          pnpm test

  publish:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./services/
          file: ./services/delivery/Dockerfile
          push: true
          tags: floriaaan/goodfood-delivery:latest

  deploy:
    runs-on: ubuntu-latest
    environment: dev
    needs: [ build, test, publish ]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Install kubectl
        run: |
          sudo snap install kubectl --classic
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.5
      - name: Terraform init
        run: |
          cd ./terraform &&
          terraform init
      - name: Terraform apply
        run: |
          cd ./terraform &&
          terraform apply -auto-approve
      - name: Terraform apply delivery
        run: |
          cd ../services/delivery/terraform &&
          terraform apply -auto-approve
      - name: Configure kubectl
        run: |
          az aks get-credentials --resource-group rg-goodfood-dev --name aks-goodfood-dev
      - name: apply k8s manifests
        run: |
          cd .. &&
          kubectl create namespace goodfood &&
          kubectlcrete kubectl apply -f ./k8s