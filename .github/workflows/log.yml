name: Log Microservice CI/CD

on:
  push:
    branches: [log]
  pull_request:
    branches: [dev, main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.3

      - name: Build
        run: cd services/log && go build .

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@master
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.3

      - name: Execute tests
        run: cd services/log && go test -v .

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./services/
          file: ./services/log/Dockerfile
          push: true
          tags: floriaaan/goodfood-log:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test, publish]
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: whoami
      - name: Deploying product
        run: kubectl rollout restart deployment product